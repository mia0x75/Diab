FROM --platform=$BUILDPLATFORM golang:alpine AS builder
WORKDIR /go/src/github.com/gotify/server
ARG TARGETOS TARGETARCH BRANCH
ENV CGO_ENABLED=1
ENV GOOS=$TARGETOS
ENV GOARCH=$TARGETARCH

RUN set -ex \
  && echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
  && apk update \
  && apk upgrade \
  && apk add git build-base make tzdata upx musl-dev nodejs npm yarn curl \
  && git clone -b $BRANCH --single-branch https://github.com/gotify/server /go/src/github.com/gotify/server \
  && case "$TARGETOS" in \
      "linux") ;; \
      *) echo "ERROR: Unsupported OS: ${TARGETOS}"; exit 1 ;; \
  esac \
  && case "$TARGETARCH" in \
    "amd64") \
        FILE="x86_64-linux-musl-cross.tgz" \
        export CC="x86_64-linux-musl-gcc" \
    ;; \
    "arm64") \
        FILE="aarch64-linux-musl-cross.tgz" \
        export CC="aarch64-linux-musl-gcc" \
    ;; \
    *) \
        echo "ERROR: Unsupported CPU architecture: ${TARGETARCH}"; \
        exit 1 \
    ;; \
  esac \
  && curl -L -o ${FILE} "https://musl.nn.ci/${FILE}" \
  && tar xf ${FILE} --strip-components 1 -C /usr/local \
  && rm -f ${FILE} \
  && cd ui \
  && npx update-browserslist-db@latest \
  && yarn install \
  && env NODE_OPTIONS=--openssl-legacy-provider yarn build \
  && cd /go/src/github.com/gotify/server \
  && go build -mod=readonly -a -installsuffix cgo -v -trimpath -ldflags "--extldflags '-static -fpic' -w -s -buildid=" -o release/gotify app.go \
  && upx --lzma /go/src/github.com/gotify/server/release/gotify \
  && mkdir /release \
  && cp /go/src/github.com/gotify/server/release/gotify /release

FROM --platform=$TARGETPLATFORM alpine AS dist
RUN set -ex \
  && apk upgrade \
  && apk add --no-cache tzdata curl ca-certificates \
  && rm -rf /var/cache/apk/*

HEALTHCHECK --interval=30s --timeout=5s --start-period=5s CMD curl --fail http://localhost/health || exit 1

WORKDIR /app
COPY --from=builder /release/gotify /app/gotify
EXPOSE 80
ENTRYPOINT ["/app/gotify"]
